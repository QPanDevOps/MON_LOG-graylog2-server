// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContentPacksList /> should render with content packs 1`] = `
.c2.btn-danger {
  background-color: #ad0707;
  border-color: #b23939;
  color: rgb(252,249,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-danger:hover {
  background-color: #a00e0e;
  border-color: #a53636;
  color: #e9e6e6;
}

.c2.btn-danger.active {
  background-color: #b75151;
  border-color: #bc6363;
  color: rgb(252,249,249);
}

.c2.btn-danger.active:hover {
  background-color: #a94c4c;
  border-color: #ad5c5c;
  color: #e9e6e6;
}

.c2.btn-danger[disabled],
.c2.btn-danger.disabled {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c2.btn-danger[disabled]:hover,
.c2.btn-danger.disabled:hover {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c2.btn-default {
  background-color: #e6e6e6;
  border-color: #e0e0e0;
  color: rgb(73,73,73);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-default:hover {
  background-color: #d4d4d4;
  border-color: #cfcfcf;
  color: #444444;
}

.c2.btn-default.active {
  background-color: #dadada;
  border-color: #d4d4d4;
  color: rgb(49,49,49);
}

.c2.btn-default.active:hover {
  background-color: #cacaca;
  border-color: #c4c4c4;
  color: #2f2f2f;
}

.c2.btn-default[disabled],
.c2.btn-default.disabled {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c2.btn-default[disabled]:hover,
.c2.btn-default.disabled:hover {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c2.btn-info {
  background-color: #0063be;
  border-color: #3970c2;
  color: rgb(249,250,252);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-info:hover {
  background-color: #0c5cb0;
  border-color: #3668b3;
  color: #e6e7e9;
}

.c2.btn-info.active {
  background-color: #517cc5;
  border-color: #6386c9;
  color: rgb(249,250,252);
}

.c2.btn-info.active:hover {
  background-color: #4b73b6;
  border-color: #5c7dba;
  color: #e6e7e9;
}

.c2.btn-info[disabled],
.c2.btn-info.disabled {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c2.btn-info[disabled]:hover,
.c2.btn-info.disabled:hover {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c2.btn-link {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-link:hover {
  background-color: #ebebeb26;
  border-color: #ebebeb26;
  color: #68267b;
}

.c2.btn-link.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #410057;
}

.c2.btn-link.active:hover {
  background-color: rgba(255,255,255,0);
  border-color: #ebebeb26;
  color: #3d0c51;
}

.c2.btn-link[disabled],
.c2.btn-link.disabled {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c2.btn-link[disabled]:hover,
.c2.btn-link.disabled:hover {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c2.btn-primary {
  background-color: #702785;
  border-color: #7b458e;
  color: rgb(234,229,236);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-primary:hover {
  background-color: #68267b;
  border-color: #724083;
  color: #d8d3da;
}

.c2.btn-primary.active {
  background-color: #855996;
  border-color: #8f699d;
  color: rgb(250,249,251);
}

.c2.btn-primary.active:hover {
  background-color: #7c538b;
  border-color: #846292;
  color: #e7e6e8;
}

.c2.btn-primary[disabled],
.c2.btn-primary.disabled {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c2.btn-primary[disabled]:hover,
.c2.btn-primary.disabled:hover {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c2.btn-success {
  background-color: #00ae42;
  border-color: #39b356;
  color: rgb(249,252,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-success:hover {
  background-color: #0ca13e;
  border-color: #36a550;
  color: #e6e9e6;
}

.c2.btn-success.active {
  background-color: #51b866;
  border-color: #63bc74;
  color: rgb(249,252,250);
}

.c2.btn-success.active:hover {
  background-color: #4baa5f;
  border-color: #5cae6c;
  color: #e6e9e7;
}

.c2.btn-success[disabled],
.c2.btn-success.disabled {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c2.btn-success[disabled]:hover,
.c2.btn-success.disabled:hover {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c2.btn-warning {
  background-color: #ffd200;
  border-color: #f9cd07;
  color: rgb(57,47,0);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-warning:hover {
  background-color: #ebc20c;
  border-color: #e6bd0e;
  color: #362d0c;
}

.c2.btn-warning.active {
  background-color: #f2c70a;
  border-color: #ebc20c;
  color: rgb(54,45,2);
}

.c2.btn-warning.active:hover {
  background-color: #e0b80f;
  border-color: #d9b310;
  color: #332b0c;
}

.c2.btn-warning[disabled],
.c2.btn-warning.disabled {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c2.btn-warning[disabled]:hover,
.c2.btn-warning.disabled:hover {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c0 {
  color: #1f1f1f;
  font-weight: bold;
  margin-bottom: 5px;
  display: inline-block;
}

.c9.btn-danger {
  background-color: #ad0707;
  border-color: #b23939;
  color: rgb(252,249,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c9.btn-danger:hover {
  background-color: #a00e0e;
  border-color: #a53636;
  color: #e9e6e6;
}

.c9.btn-danger.active {
  background-color: #b75151;
  border-color: #bc6363;
  color: rgb(252,249,249);
}

.c9.btn-danger.active:hover {
  background-color: #a94c4c;
  border-color: #ad5c5c;
  color: #e9e6e6;
}

.c9.btn-danger[disabled],
.c9.btn-danger.disabled {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c9.btn-danger[disabled]:hover,
.c9.btn-danger.disabled:hover {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c9.btn-default {
  background-color: #e6e6e6;
  border-color: #e0e0e0;
  color: rgb(73,73,73);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c9.btn-default:hover {
  background-color: #d4d4d4;
  border-color: #cfcfcf;
  color: #444444;
}

.c9.btn-default.active {
  background-color: #dadada;
  border-color: #d4d4d4;
  color: rgb(49,49,49);
}

.c9.btn-default.active:hover {
  background-color: #cacaca;
  border-color: #c4c4c4;
  color: #2f2f2f;
}

.c9.btn-default[disabled],
.c9.btn-default.disabled {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c9.btn-default[disabled]:hover,
.c9.btn-default.disabled:hover {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c9.btn-info {
  background-color: #0063be;
  border-color: #3970c2;
  color: rgb(249,250,252);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c9.btn-info:hover {
  background-color: #0c5cb0;
  border-color: #3668b3;
  color: #e6e7e9;
}

.c9.btn-info.active {
  background-color: #517cc5;
  border-color: #6386c9;
  color: rgb(249,250,252);
}

.c9.btn-info.active:hover {
  background-color: #4b73b6;
  border-color: #5c7dba;
  color: #e6e7e9;
}

.c9.btn-info[disabled],
.c9.btn-info.disabled {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c9.btn-info[disabled]:hover,
.c9.btn-info.disabled:hover {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c9.btn-link {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c9.btn-link:hover {
  background-color: #ebebeb26;
  border-color: #ebebeb26;
  color: #68267b;
}

.c9.btn-link.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #410057;
}

.c9.btn-link.active:hover {
  background-color: rgba(255,255,255,0);
  border-color: #ebebeb26;
  color: #3d0c51;
}

.c9.btn-link[disabled],
.c9.btn-link.disabled {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c9.btn-link[disabled]:hover,
.c9.btn-link.disabled:hover {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c9.btn-primary {
  background-color: #702785;
  border-color: #7b458e;
  color: rgb(234,229,236);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c9.btn-primary:hover {
  background-color: #68267b;
  border-color: #724083;
  color: #d8d3da;
}

.c9.btn-primary.active {
  background-color: #855996;
  border-color: #8f699d;
  color: rgb(250,249,251);
}

.c9.btn-primary.active:hover {
  background-color: #7c538b;
  border-color: #846292;
  color: #e7e6e8;
}

.c9.btn-primary[disabled],
.c9.btn-primary.disabled {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c9.btn-primary[disabled]:hover,
.c9.btn-primary.disabled:hover {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c9.btn-success {
  background-color: #00ae42;
  border-color: #39b356;
  color: rgb(249,252,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c9.btn-success:hover {
  background-color: #0ca13e;
  border-color: #36a550;
  color: #e6e9e6;
}

.c9.btn-success.active {
  background-color: #51b866;
  border-color: #63bc74;
  color: rgb(249,252,250);
}

.c9.btn-success.active:hover {
  background-color: #4baa5f;
  border-color: #5cae6c;
  color: #e6e9e7;
}

.c9.btn-success[disabled],
.c9.btn-success.disabled {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c9.btn-success[disabled]:hover,
.c9.btn-success.disabled:hover {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c9.btn-warning {
  background-color: #ffd200;
  border-color: #f9cd07;
  color: rgb(57,47,0);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c9.btn-warning:hover {
  background-color: #ebc20c;
  border-color: #e6bd0e;
  color: #362d0c;
}

.c9.btn-warning.active {
  background-color: #f2c70a;
  border-color: #ebc20c;
  color: rgb(54,45,2);
}

.c9.btn-warning.active:hover {
  background-color: #e0b80f;
  border-color: #d9b310;
  color: #332b0c;
}

.c9.btn-warning[disabled],
.c9.btn-warning.disabled {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c9.btn-warning[disabled]:hover,
.c9.btn-warning.disabled:hover {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c9 ~ .dropdown-menu > li > a {
  color: #1f1f1f;
}

.c9 ~ .dropdown-menu > li > a:hover,
.c9 ~ .dropdown-menu > li > a:focus {
  color: rgb(73,73,73);
  background-color: #e6e6e6;
}

.c9 ~ .dropdown-menu > .active > a {
  color: rgb(250,251,253);
  background-color: #7894ce;
}

.c9 ~ .dropdown-menu > .active > a:hover,
.c9 ~ .dropdown-menu > .active > a:focus {
  color: rgb(249,250,252);
  background-color: #0063be;
}

.c9 ~ .dropdown-menu > .disabled > a {
  color: rgb(103,103,103);
  background-color: #e6e6e6;
}

.c9 ~ .dropdown-menu > .disabled > a:hover,
.c9 ~ .dropdown-menu > .disabled > a:focus {
  color: rgb(103,103,103);
}

.c1 {
  color: #1f1f1f;
  background-color: #fff;
  border-color: #cdcdcd;
}

.c1::-webkit-input-placeholder {
  color: #9b9b9b;
}

.c1::-moz-placeholder {
  color: #9b9b9b;
}

.c1:-ms-input-placeholder {
  color: #9b9b9b;
}

.c1::placeholder {
  color: #9b9b9b;
}

.c1:focus {
  border-color: #7894ce;
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(120,148,206,0.4);
}

.c1[disabled],
.c1[readonly],
fieldset[disabled] .c1 {
  background-color: #cdcdcd;
}

.c1 ~ .form-control-feedback.glyphicon {
  display: none;
}

.c5 {
  background-color: #fff;
  border-color: #cdcdcd;
}

.c5 .list-group-item-heading {
  font-weight: bold;
}

.c5.disabled,
.c5.disabled:hover,
.c5.disabled:focus {
  color: #9b9b9b;
  background-color: #e6e6e6;
}

.c5.disabled .list-group-item-heading,
.c5.disabled:hover .list-group-item-heading,
.c5.disabled:focus .list-group-item-heading {
  color: inherit;
  font-weight: bold;
}

.c5.disabled .list-group-item-text,
.c5.disabled:hover .list-group-item-text,
.c5.disabled:focus .list-group-item-text {
  color: #9b9b9b;
}

.c5.active,
.c5.active:hover,
.c5.active:focus {
  color: #ffffff;
  background-color: #9b7ca8;
  border-color: #9b7ca8;
  z-index: auto;
}

.c5.active .list-group-item-heading,
.c5.active:hover .list-group-item-heading,
.c5.active:focus .list-group-item-heading,
.c5.active .list-group-item-heading > small,
.c5.active:hover .list-group-item-heading > small,
.c5.active:focus .list-group-item-heading > small,
.c5.active .list-group-item-heading > .small,
.c5.active:hover .list-group-item-heading > .small,
.c5.active:focus .list-group-item-heading > .small {
  color: inherit;
  font-weight: bold;
}

.c5.active .list-group-item-text,
.c5.active:hover .list-group-item-text,
.c5.active:focus .list-group-item-text {
  color: #9b7ca8;
}

a.c5,
button.c5 {
  color: #702785;
}

a.c5 .list-group-item-heading,
button.c5 .list-group-item-heading {
  color: #383838;
  font-weight: bold;
}

a.c5:hover:not(.disabled),
button.c5:hover:not(.disabled),
a.c5:focus:not(.disabled),
button.c5:focus:not(.disabled) {
  background-color: #6a6a6a;
  color: #fff;
}

a.c5:hover:not(.disabled).active,
button.c5:hover:not(.disabled).active,
a.c5:focus:not(.disabled).active,
button.c5:focus:not(.disabled).active {
  color: #fff;
  border-color: #702785;
  background-color: #702785;
}

a.c5:hover:not(.disabled) .list-group-item-heading,
button.c5:hover:not(.disabled) .list-group-item-heading,
a.c5:focus:not(.disabled) .list-group-item-heading,
button.c5:focus:not(.disabled) .list-group-item-heading {
  color: #fff;
}

.c8 .modal-content {
  background-color: #fff;
  border-color: rgba(31,31,31,0.2);
}

.c8 .modal-content .modal-header {
  border-bottom-color: #e6e6e6;
}

.c8 .modal-content .modal-footer {
  border-top-color: #e6e6e6;
}

.c8 .modal-title {
  font-size: 1.424rem;
}

.c8 .modal-dialog {
  margin-top: 55px;
}

.c8 .modal-backdrop {
  height: 100000%;
  z-index: 1030;
}

.c8 form {
  margin-bottom: 0;
}

.c8 .modal-body .form-group {
  margin-bottom: 5px;
}

.c4 {
  background-color: #e6e6e6;
  font-size: 1rem;
  padding: 0 15px;
}

.c4 .form-group {
  margin: 0;
}

.c6 {
  margin: 10px 0;
  min-height: 20px;
}

.c3.pagination {
  font-size: 0.889rem;
}

.c3.pagination > li > a,
.c3.pagination > li > span {
  color: #1f1f1f;
  background-color: #fff;
  border-color: #cdcdcd;
}

.c3.pagination > li > a:hover,
.c3.pagination > li > span:hover,
.c3.pagination > li > a:focus,
.c3.pagination > li > span:focus {
  color: #1f1f1f;
  background-color: #e6e6e6;
  border-color: #cdcdcd;
}

.c3.pagination > li.active > a,
.c3.pagination > li.active > span,
.c3.pagination > li.active > a:hover,
.c3.pagination > li.active > span:hover,
.c3.pagination > li.active > a:focus,
.c3.pagination > li.active > span:focus {
  color: #1f1f1f;
  background-color: #eff2f8;
  border-color: #bdc8e4;
}

.c3.pagination > li.disabled > a,
.c3.pagination > li.disabled > a:hover,
.c3.pagination > li.disabled > a:focus,
.c3.pagination > li.disabled > span,
.c3.pagination > li.disabled > span:hover,
.c3.pagination > li.disabled > span:focus {
  color: #b4b4b4;
  background-color: #ffffff;
  border-color: #e6e6e6;
}

.c7 {
  margin-left: 4px;
  background-color: #009a3a;
  color: #1f1f1f;
}

<ContentPacksList
  contentPackMetadata={
    Object {
      "1": Object {
        "1": Object {
          "installation_count": 1,
        },
      },
      "2": Object {
        "5": Object {
          "installation_count": 2,
        },
      },
    }
  }
  contentPacks={
    Array [
      Object {
        "id": "1",
        "rev": 1,
        "summary": "Grok Patterns to extract informations from UFW logfiles",
        "title": "UFW Grok Patterns",
        "version": "1.0",
      },
      Object {
        "id": "2",
        "rev": 1,
        "summary": "Patterns to retreive rails production logs",
        "title": "Rails Log Patterns",
        "version": "2.1",
      },
      Object {
        "id": "3",
        "rev": 1,
        "summary": "",
        "title": "Backup Content Pack",
        "version": "3.0",
      },
      Object {
        "id": "4",
        "rev": 1,
        "summary": "A crypted backup over ssh.",
        "title": "SSH Archive",
        "version": "3.4",
      },
      Object {
        "id": "5",
        "rev": 1,
        "summary": "Fast but insecure backup",
        "title": "FTP Backup",
        "version": "1.0",
      },
      Object {
        "id": "6",
        "rev": 1,
        "summary": "Grok Patterns to extract informations from UFW logfiles",
        "title": "UFW Grok Patterns",
        "version": "1.0",
      },
      Object {
        "id": "7",
        "rev": 1,
        "summary": "Patterns to retreive rails production logs",
        "title": "Rails Log Patterns",
        "version": "2.1",
      },
      Object {
        "id": "8",
        "rev": 1,
        "states": Array [
          "installed",
        ],
        "summary": "",
        "title": "Backup Content Pack",
        "version": "3.0",
      },
      Object {
        "id": "9",
        "rev": 1,
        "summary": "A crypted backup over ssh.",
        "title": "SSH Archive",
        "version": "3.4",
      },
      Object {
        "id": "10",
        "rev": 1,
        "summary": "Fast but insecure backup",
        "title": "FTP Backup",
        "version": "1.0",
      },
      Object {
        "id": "11",
        "rev": 1,
        "summary": "Grok Patterns to extract informations from UFW logfiles",
        "title": "UFW Grok Patterns",
        "version": "1.0",
      },
      Object {
        "id": "12",
        "rev": 1,
        "summary": "Patterns to retreive rails production logs",
        "title": "Rails Log Patterns",
        "version": "2.1",
      },
      Object {
        "id": "13",
        "rev": 1,
        "summary": "",
        "title": "Backup Content Pack",
        "version": "3.0",
      },
      Object {
        "id": "14",
        "rev": 1,
        "summary": "A crypted backup over ssh.",
        "title": "SSH Archive",
        "version": "3.4",
      },
      Object {
        "id": "15",
        "rev": 1,
        "summary": "Fast but insecure backup",
        "title": "FTP Backup",
        "version": "1.0",
      },
    ]
  }
  onDeletePack={[Function]}
  onInstall={[Function]}
>
  <div>
    <Row
      bsClass="row"
      className="row-sm"
      componentClass="div"
    >
      <div
        className="row-sm row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <TypeAheadDataFilter
              data={
                Array [
                  Object {
                    "id": "1",
                    "rev": 1,
                    "summary": "Grok Patterns to extract informations from UFW logfiles",
                    "title": "UFW Grok Patterns",
                    "version": "1.0",
                  },
                  Object {
                    "id": "2",
                    "rev": 1,
                    "summary": "Patterns to retreive rails production logs",
                    "title": "Rails Log Patterns",
                    "version": "2.1",
                  },
                  Object {
                    "id": "3",
                    "rev": 1,
                    "summary": "",
                    "title": "Backup Content Pack",
                    "version": "3.0",
                  },
                  Object {
                    "id": "4",
                    "rev": 1,
                    "summary": "A crypted backup over ssh.",
                    "title": "SSH Archive",
                    "version": "3.4",
                  },
                  Object {
                    "id": "5",
                    "rev": 1,
                    "summary": "Fast but insecure backup",
                    "title": "FTP Backup",
                    "version": "1.0",
                  },
                  Object {
                    "id": "6",
                    "rev": 1,
                    "summary": "Grok Patterns to extract informations from UFW logfiles",
                    "title": "UFW Grok Patterns",
                    "version": "1.0",
                  },
                  Object {
                    "id": "7",
                    "rev": 1,
                    "summary": "Patterns to retreive rails production logs",
                    "title": "Rails Log Patterns",
                    "version": "2.1",
                  },
                  Object {
                    "id": "8",
                    "rev": 1,
                    "states": Array [
                      "installed",
                    ],
                    "summary": "",
                    "title": "Backup Content Pack",
                    "version": "3.0",
                  },
                  Object {
                    "id": "9",
                    "rev": 1,
                    "summary": "A crypted backup over ssh.",
                    "title": "SSH Archive",
                    "version": "3.4",
                  },
                  Object {
                    "id": "10",
                    "rev": 1,
                    "summary": "Fast but insecure backup",
                    "title": "FTP Backup",
                    "version": "1.0",
                  },
                  Object {
                    "id": "11",
                    "rev": 1,
                    "summary": "Grok Patterns to extract informations from UFW logfiles",
                    "title": "UFW Grok Patterns",
                    "version": "1.0",
                  },
                  Object {
                    "id": "12",
                    "rev": 1,
                    "summary": "Patterns to retreive rails production logs",
                    "title": "Rails Log Patterns",
                    "version": "2.1",
                  },
                  Object {
                    "id": "13",
                    "rev": 1,
                    "summary": "",
                    "title": "Backup Content Pack",
                    "version": "3.0",
                  },
                  Object {
                    "id": "14",
                    "rev": 1,
                    "summary": "A crypted backup over ssh.",
                    "title": "SSH Archive",
                    "version": "3.4",
                  },
                  Object {
                    "id": "15",
                    "rev": 1,
                    "summary": "Fast but insecure backup",
                    "title": "FTP Backup",
                    "version": "1.0",
                  },
                ]
              }
              displayKey="name"
              filterBy=""
              filterSuggestionAccessor=""
              filterSuggestions={Array []}
              id="content-packs-filter"
              label="Filter"
              onDataFiltered={[Function]}
              searchInKeys={
                Array [
                  "name",
                  "summary",
                ]
              }
            >
              <div
                className="filter"
              >
                <form
                  className="form-inline"
                  onSubmit={[Function]}
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <TypeAheadInput
                    displayKey="name"
                    id="content-packs-filter"
                    label="Filter"
                    onSuggestionSelected={[Function]}
                    suggestionText="Filter by : "
                    suggestions={Array []}
                  >
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help=""
                      id="content-packs-filter"
                      label="Filter"
                      placeholder=""
                      type="text"
                      wrapperClassName="typeahead-wrapper"
                    >
                      <Component
                        controlId="content-packs-filter"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="content-packs-filter"
                          validationState={null}
                        >
                          <FormGroup
                            bsClass="form-group"
                            className=""
                            controlId="content-packs-filter"
                            validationState={null}
                          >
                            <div
                              className="form-group"
                            >
                              <ControlLabel>
                                <ControlLabel
                                  bsClass="control-label"
                                  className="c0"
                                  srOnly={false}
                                >
                                  <label
                                    className="c0 control-label"
                                    htmlFor="content-packs-filter"
                                  >
                                    Filter
                                  </label>
                                </ControlLabel>
                              </ControlLabel>
                              <InputWrapper
                                className="typeahead-wrapper"
                              >
                                <div
                                  className="typeahead-wrapper"
                                >
                                  <FormControl
                                    componentClass="input"
                                    inputRef={[Function]}
                                    label="Filter"
                                    name="content-packs-filter"
                                    placeholder=""
                                    type="text"
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      className="c1"
                                      componentClass="input"
                                      inputRef={[Function]}
                                      label="Filter"
                                      name="content-packs-filter"
                                      placeholder=""
                                      type="text"
                                    >
                                      <input
                                        className="c1 form-control"
                                        id="content-packs-filter"
                                        label="Filter"
                                        name="content-packs-filter"
                                        placeholder=""
                                        type="text"
                                      />
                                    </FormControl>
                                  </FormControl>
                                </div>
                              </InputWrapper>
                            </div>
                          </FormGroup>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                  </TypeAheadInput>
                  <ForwardRef
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                    type="submit"
                  >
                    <Button__StyledButton
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="submit"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="c2"
                        disabled={false}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="submit"
                      >
                        <button
                          className="c2 btn btn-default"
                          disabled={false}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="submit"
                        >
                          Filter
                        </button>
                      </Button>
                    </Button__StyledButton>
                  </ForwardRef>
                  <ForwardRef
                    disabled={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                    type="button"
                  >
                    <Button__StyledButton
                      disabled={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="button"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="c2"
                        disabled={true}
                        onClick={[Function]}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="button"
                      >
                        <button
                          className="c2 btn btn-default"
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="button"
                        >
                          Reset
                        </button>
                      </Button>
                    </Button__StyledButton>
                  </ForwardRef>
                </form>
                <ul
                  className="pill-list"
                >
                  <Component />
                </ul>
              </div>
            </TypeAheadDataFilter>
          </div>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <Pagination
              boundaryPagesRange={1}
              currentPage={1}
              disabled={false}
              hideEllipsis={false}
              hideFirstAndLastPageLinks={false}
              hidePreviousAndNextPageLinks={false}
              onChange={[Function]}
              siblingPagesRange={1}
              totalPages={2}
            >
              <UltimatePaginationComponent
                boundaryPagesRange={1}
                currentPage={1}
                data-testid="graylog-pagination"
                disabled={false}
                hideEllipsis={false}
                hideFirstAndLastPageLinks={false}
                hidePreviousAndNextPageLinks={false}
                onChange={[Function]}
                siblingPagesRange={1}
                totalPages={2}
              >
                <Pagination__StyledBootstrapPagination
                  data-testid="graylog-pagination"
                >
                  <Pagination
                    bsClass="pagination"
                    className="c3"
                    data-testid="graylog-pagination"
                  >
                    <ul
                      className="c3 pagination"
                      data-testid="graylog-pagination"
                    >
                      <Component
                        isActive={true}
                        isDisabled={false}
                        key="-3"
                        onClick={[Function]}
                        type="FIRST_PAGE_LINK"
                        value={1}
                      >
                        <First
                          disabled={true}
                          onClick={[Function]}
                        >
                          <li
                            aria-label="First"
                            className="disabled"
                            onClick={[Function]}
                          >
                            <span>
                              <Icon
                                name="angle-double-left"
                                type="solid"
                              >
                                <FontAwesomeIcon
                                  icon={
                                    Object {
                                      "iconName": "angle-double-left",
                                      "prefix": "fas",
                                    }
                                  }
                                >
                                  <svg
                                    className="svg-inline--fa fa-angle-double-left"
                                  />
                                </FontAwesomeIcon>
                              </Icon>
                            </span>
                          </li>
                        </First>
                      </Component>
                      <Component
                        isActive={true}
                        isDisabled={false}
                        key="-4"
                        onClick={[Function]}
                        type="PREVIOUS_PAGE_LINK"
                        value={1}
                      >
                        <Prev
                          disabled={true}
                          onClick={[Function]}
                        >
                          <li
                            aria-label="Prev"
                            className="disabled"
                            onClick={[Function]}
                          >
                            <span>
                              <Icon
                                name="angle-left"
                                type="solid"
                              >
                                <FontAwesomeIcon
                                  icon={
                                    Object {
                                      "iconName": "angle-left",
                                      "prefix": "fas",
                                    }
                                  }
                                >
                                  <svg
                                    className="svg-inline--fa fa-angle-left"
                                  />
                                </FontAwesomeIcon>
                              </Icon>
                            </span>
                          </li>
                        </Prev>
                      </Component>
                      <Component
                        isActive={true}
                        isDisabled={false}
                        key="1"
                        onClick={[Function]}
                        type="PAGE"
                        value={1}
                      >
                        <PaginationItem
                          active={true}
                          activeLabel="(current)"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <li
                            className="active"
                          >
                            <span
                              disabled={false}
                              onClick={[Function]}
                            >
                              1
                              <span
                                className="sr-only"
                              >
                                (current)
                              </span>
                            </span>
                          </li>
                        </PaginationItem>
                      </Component>
                      <Component
                        isActive={false}
                        isDisabled={false}
                        key="2"
                        onClick={[Function]}
                        type="PAGE"
                        value={2}
                      >
                        <PaginationItem
                          active={false}
                          activeLabel="(current)"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <li
                            className=""
                          >
                            <SafeAnchor
                              componentClass="a"
                              disabled={false}
                              onClick={[Function]}
                            >
                              <a
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                              >
                                2
                              </a>
                            </SafeAnchor>
                          </li>
                        </PaginationItem>
                      </Component>
                      <Component
                        isActive={false}
                        isDisabled={false}
                        key="-5"
                        onClick={[Function]}
                        type="NEXT_PAGE_LINK"
                        value={2}
                      >
                        <Next
                          disabled={false}
                          onClick={[Function]}
                        >
                          <li
                            aria-label="Next"
                            className=""
                            onClick={[Function]}
                          >
                            <SafeAnchor
                              componentClass="a"
                            >
                              <a
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                              >
                                <Icon
                                  name="angle-right"
                                  type="solid"
                                >
                                  <FontAwesomeIcon
                                    icon={
                                      Object {
                                        "iconName": "angle-right",
                                        "prefix": "fas",
                                      }
                                    }
                                  >
                                    <svg
                                      className="svg-inline--fa fa-angle-right"
                                    />
                                  </FontAwesomeIcon>
                                </Icon>
                              </a>
                            </SafeAnchor>
                          </li>
                        </Next>
                      </Component>
                      <Component
                        isActive={false}
                        isDisabled={false}
                        key="-6"
                        onClick={[Function]}
                        type="LAST_PAGE_LINK"
                        value={2}
                      >
                        <Last
                          disabled={false}
                          onClick={[Function]}
                        >
                          <li
                            aria-label="Last"
                            className=""
                            onClick={[Function]}
                          >
                            <SafeAnchor
                              componentClass="a"
                            >
                              <a
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                              >
                                <Icon
                                  name="angle-double-right"
                                  type="solid"
                                >
                                  <FontAwesomeIcon
                                    icon={
                                      Object {
                                        "iconName": "angle-double-right",
                                        "prefix": "fas",
                                      }
                                    }
                                  >
                                    <svg
                                      className="svg-inline--fa fa-angle-double-right"
                                    />
                                  </FontAwesomeIcon>
                                </Icon>
                              </a>
                            </SafeAnchor>
                          </li>
                        </Last>
                      </Component>
                    </ul>
                  </Pagination>
                </Pagination__StyledBootstrapPagination>
              </UltimatePaginationComponent>
            </Pagination>
          </div>
        </Col>
        <Col
          bsClass="col"
          className="text-right"
          componentClass="div"
          md={2}
        >
          <div
            className="text-right col-md-2"
          >
            <span>
              Show: 
              <select
                onChange={[Function]}
                value={10}
              >
                <option>
                  10
                </option>
                <option>
                  25
                </option>
                <option>
                  50
                </option>
                <option>
                  100
                </option>
              </select>
            </span>
          </div>
        </Col>
      </div>
    </Row>
    <ControlledTableList>
      <div>
        <ListGroup>
          <ListGroup
            bsClass="list-group"
          >
            <div
              className="list-group"
            >
              <ControlledTableListHeader>
                <ControlledTableListHeader__StyledListGroupItem>
                  <ForwardRef
                    className="c4"
                  >
                    <ListGroupItem__StyledListGroupItem
                      className="c4"
                    >
                      <ListGroupItem
                        bsClass="list-group-item"
                        className="c5 c4"
                        listItem={false}
                      >
                        <span
                          className="c5 c4 list-group-item"
                        >
                          <ControlledTableListHeader__HeaderWrapper>
                            <div
                              className="c6"
                            />
                          </ControlledTableListHeader__HeaderWrapper>
                        </span>
                      </ListGroupItem>
                    </ListGroupItem__StyledListGroupItem>
                  </ForwardRef>
                </ControlledTableListHeader__StyledListGroupItem>
              </ControlledTableListHeader>
              <ControlledTableListItem
                key="1"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c5"
                      listItem={false}
                    >
                      <span
                        className="c5 list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/1"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="1"
                                      states={
                                        Array [
                                          "installed",
                                        ]
                                      }
                                    >
                                      <span>
                                        <Link
                                          key="installed"
                                          onlyActiveOnIndex={false}
                                          style={Object {}}
                                          to="/system/contentpacks/1"
                                        >
                                          <a
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <ContentPackStatus__StatusBadge
                                              status="installed"
                                            >
                                              <Badge
                                                bsClass="badge"
                                                className="Badge__StyledBadge-sc-4gzqz0-0 c7"
                                                pullRight={false}
                                                status="installed"
                                              >
                                                <span
                                                  className="Badge__StyledBadge-sc-4gzqz0-0 c7 badge"
                                                  status="installed"
                                                >
                                                  installed
                                                </span>
                                              </Badge>
                                            </ContentPackStatus__StatusBadge>
                                          </a>
                                        </Link>
                                      </span>
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button__StyledButton
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c2"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c2 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button__StyledButton>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <Modal
                                      animation={true}
                                      autoFocus={true}
                                      backdrop="static"
                                      bsClass="modal"
                                      bsSize="large"
                                      className="c8"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop="static"
                                        backdropClassName="modal-backdrop"
                                        backdropTransition={[Function]}
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        onMouseUp={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                        transition={[Function]}
                                      />
                                    </Modal>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <ForwardRef
                                  bsSize="small"
                                  id="more-actions-1"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <DropdownButton__StyledDropdownButton
                                    bsSize="small"
                                    id="more-actions-1"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c9"
                                      id="more-actions-1"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-1"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-1"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-1"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c9"
                                                  id="more-actions-1"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c9 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-1"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c9 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-1"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-1"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-1"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/1"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/1/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton__StyledDropdownButton>
                                </ForwardRef>
                                <ContentPackDownloadControl
                                  contentPackId="1"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c8"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                Grok Patterns to extract informations from UFW logfiles
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="2"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c5"
                      listItem={false}
                    >
                      <span
                        className="c5 list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/2"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="2"
                                      states={
                                        Array [
                                          "installed",
                                        ]
                                      }
                                    >
                                      <span>
                                        <Link
                                          key="installed"
                                          onlyActiveOnIndex={false}
                                          style={Object {}}
                                          to="/system/contentpacks/2"
                                        >
                                          <a
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <ContentPackStatus__StatusBadge
                                              status="installed"
                                            >
                                              <Badge
                                                bsClass="badge"
                                                className="Badge__StyledBadge-sc-4gzqz0-0 c7"
                                                pullRight={false}
                                                status="installed"
                                              >
                                                <span
                                                  className="Badge__StyledBadge-sc-4gzqz0-0 c7 badge"
                                                  status="installed"
                                                >
                                                  installed
                                                </span>
                                              </Badge>
                                            </ContentPackStatus__StatusBadge>
                                          </a>
                                        </Link>
                                      </span>
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button__StyledButton
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c2"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c2 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button__StyledButton>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <Modal
                                      animation={true}
                                      autoFocus={true}
                                      backdrop="static"
                                      bsClass="modal"
                                      bsSize="large"
                                      className="c8"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop="static"
                                        backdropClassName="modal-backdrop"
                                        backdropTransition={[Function]}
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        onMouseUp={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                        transition={[Function]}
                                      />
                                    </Modal>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <ForwardRef
                                  bsSize="small"
                                  id="more-actions-2"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <DropdownButton__StyledDropdownButton
                                    bsSize="small"
                                    id="more-actions-2"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c9"
                                      id="more-actions-2"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-2"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-2"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-2"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c9"
                                                  id="more-actions-2"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c9 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-2"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c9 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-2"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-2"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-2"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/2"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/2/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton__StyledDropdownButton>
                                </ForwardRef>
                                <ContentPackDownloadControl
                                  contentPackId="2"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c8"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                Patterns to retreive rails production logs
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="3"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c5"
                      listItem={false}
                    >
                      <span
                        className="c5 list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/3"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="3"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button__StyledButton
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c2"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c2 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button__StyledButton>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <Modal
                                      animation={true}
                                      autoFocus={true}
                                      backdrop="static"
                                      bsClass="modal"
                                      bsSize="large"
                                      className="c8"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop="static"
                                        backdropClassName="modal-backdrop"
                                        backdropTransition={[Function]}
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        onMouseUp={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                        transition={[Function]}
                                      />
                                    </Modal>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <ForwardRef
                                  bsSize="small"
                                  id="more-actions-3"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <DropdownButton__StyledDropdownButton
                                    bsSize="small"
                                    id="more-actions-3"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c9"
                                      id="more-actions-3"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-3"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-3"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-3"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c9"
                                                  id="more-actions-3"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c9 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-3"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c9 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-3"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-3"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-3"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/3"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/3/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton__StyledDropdownButton>
                                </ForwardRef>
                                <ContentPackDownloadControl
                                  contentPackId="3"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c8"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="4"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c5"
                      listItem={false}
                    >
                      <span
                        className="c5 list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/4"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="4"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button__StyledButton
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c2"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c2 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button__StyledButton>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <Modal
                                      animation={true}
                                      autoFocus={true}
                                      backdrop="static"
                                      bsClass="modal"
                                      bsSize="large"
                                      className="c8"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop="static"
                                        backdropClassName="modal-backdrop"
                                        backdropTransition={[Function]}
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        onMouseUp={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                        transition={[Function]}
                                      />
                                    </Modal>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <ForwardRef
                                  bsSize="small"
                                  id="more-actions-4"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <DropdownButton__StyledDropdownButton
                                    bsSize="small"
                                    id="more-actions-4"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c9"
                                      id="more-actions-4"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-4"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-4"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-4"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c9"
                                                  id="more-actions-4"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c9 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-4"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c9 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-4"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-4"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-4"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/4"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/4/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton__StyledDropdownButton>
                                </ForwardRef>
                                <ContentPackDownloadControl
                                  contentPackId="4"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c8"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                A crypted backup over ssh.
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="5"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c5"
                      listItem={false}
                    >
                      <span
                        className="c5 list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/5"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="5"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button__StyledButton
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c2"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c2 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button__StyledButton>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <Modal
                                      animation={true}
                                      autoFocus={true}
                                      backdrop="static"
                                      bsClass="modal"
                                      bsSize="large"
                                      className="c8"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop="static"
                                        backdropClassName="modal-backdrop"
                                        backdropTransition={[Function]}
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        onMouseUp={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                        transition={[Function]}
                                      />
                                    </Modal>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <ForwardRef
                                  bsSize="small"
                                  id="more-actions-5"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <DropdownButton__StyledDropdownButton
                                    bsSize="small"
                                    id="more-actions-5"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c9"
                                      id="more-actions-5"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-5"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-5"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-5"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c9"
                                                  id="more-actions-5"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c9 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-5"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c9 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-5"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-5"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-5"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/5"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/5/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton__StyledDropdownButton>
                                </ForwardRef>
                                <ContentPackDownloadControl
                                  contentPackId="5"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c8"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                Fast but insecure backup
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="6"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c5"
                      listItem={false}
                    >
                      <span
                        className="c5 list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/6"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="6"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button__StyledButton
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c2"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c2 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button__StyledButton>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <Modal
                                      animation={true}
                                      autoFocus={true}
                                      backdrop="static"
                                      bsClass="modal"
                                      bsSize="large"
                                      className="c8"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop="static"
                                        backdropClassName="modal-backdrop"
                                        backdropTransition={[Function]}
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        onMouseUp={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                        transition={[Function]}
                                      />
                                    </Modal>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <ForwardRef
                                  bsSize="small"
                                  id="more-actions-6"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <DropdownButton__StyledDropdownButton
                                    bsSize="small"
                                    id="more-actions-6"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c9"
                                      id="more-actions-6"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-6"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-6"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-6"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c9"
                                                  id="more-actions-6"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c9 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-6"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c9 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-6"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-6"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-6"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/6"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/6/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton__StyledDropdownButton>
                                </ForwardRef>
                                <ContentPackDownloadControl
                                  contentPackId="6"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c8"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                Grok Patterns to extract informations from UFW logfiles
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="7"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c5"
                      listItem={false}
                    >
                      <span
                        className="c5 list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/7"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="7"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button__StyledButton
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c2"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c2 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button__StyledButton>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <Modal
                                      animation={true}
                                      autoFocus={true}
                                      backdrop="static"
                                      bsClass="modal"
                                      bsSize="large"
                                      className="c8"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop="static"
                                        backdropClassName="modal-backdrop"
                                        backdropTransition={[Function]}
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        onMouseUp={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                        transition={[Function]}
                                      />
                                    </Modal>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <ForwardRef
                                  bsSize="small"
                                  id="more-actions-7"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <DropdownButton__StyledDropdownButton
                                    bsSize="small"
                                    id="more-actions-7"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c9"
                                      id="more-actions-7"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-7"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-7"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-7"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c9"
                                                  id="more-actions-7"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c9 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-7"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c9 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-7"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-7"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-7"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/7"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/7/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton__StyledDropdownButton>
                                </ForwardRef>
                                <ContentPackDownloadControl
                                  contentPackId="7"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c8"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                Patterns to retreive rails production logs
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="8"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c5"
                      listItem={false}
                    >
                      <span
                        className="c5 list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/8"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="8"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button__StyledButton
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c2"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c2 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button__StyledButton>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <Modal
                                      animation={true}
                                      autoFocus={true}
                                      backdrop="static"
                                      bsClass="modal"
                                      bsSize="large"
                                      className="c8"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop="static"
                                        backdropClassName="modal-backdrop"
                                        backdropTransition={[Function]}
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        onMouseUp={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                        transition={[Function]}
                                      />
                                    </Modal>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <ForwardRef
                                  bsSize="small"
                                  id="more-actions-8"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <DropdownButton__StyledDropdownButton
                                    bsSize="small"
                                    id="more-actions-8"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c9"
                                      id="more-actions-8"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-8"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-8"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-8"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c9"
                                                  id="more-actions-8"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c9 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-8"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c9 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-8"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-8"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-8"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/8"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/8/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton__StyledDropdownButton>
                                </ForwardRef>
                                <ContentPackDownloadControl
                                  contentPackId="8"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c8"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="9"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c5"
                      listItem={false}
                    >
                      <span
                        className="c5 list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/9"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="9"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button__StyledButton
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c2"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c2 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button__StyledButton>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <Modal
                                      animation={true}
                                      autoFocus={true}
                                      backdrop="static"
                                      bsClass="modal"
                                      bsSize="large"
                                      className="c8"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop="static"
                                        backdropClassName="modal-backdrop"
                                        backdropTransition={[Function]}
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        onMouseUp={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                        transition={[Function]}
                                      />
                                    </Modal>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <ForwardRef
                                  bsSize="small"
                                  id="more-actions-9"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <DropdownButton__StyledDropdownButton
                                    bsSize="small"
                                    id="more-actions-9"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c9"
                                      id="more-actions-9"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-9"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-9"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-9"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c9"
                                                  id="more-actions-9"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c9 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-9"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c9 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-9"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-9"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-9"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/9"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/9/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton__StyledDropdownButton>
                                </ForwardRef>
                                <ContentPackDownloadControl
                                  contentPackId="9"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c8"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                A crypted backup over ssh.
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="10"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c5"
                      listItem={false}
                    >
                      <span
                        className="c5 list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/10"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="10"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button__StyledButton
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c2"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c2 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button__StyledButton>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <Modal
                                      animation={true}
                                      autoFocus={true}
                                      backdrop="static"
                                      bsClass="modal"
                                      bsSize="large"
                                      className="c8"
                                      dialogComponentClass={[Function]}
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    >
                                      <Modal
                                        autoFocus={true}
                                        backdrop="static"
                                        backdropClassName="modal-backdrop"
                                        backdropTransition={[Function]}
                                        containerClassName="modal-open"
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onEntering={[Function]}
                                        onExited={[Function]}
                                        onHide={[Function]}
                                        onMouseUp={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                        transition={[Function]}
                                      />
                                    </Modal>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <ForwardRef
                                  bsSize="small"
                                  id="more-actions-10"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <DropdownButton__StyledDropdownButton
                                    bsSize="small"
                                    id="more-actions-10"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c9"
                                      id="more-actions-10"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-10"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-10"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-10"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c9"
                                                  id="more-actions-10"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c9 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-10"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c9 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-10"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-10"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-10"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/10"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/10/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton__StyledDropdownButton>
                                </ForwardRef>
                                <ContentPackDownloadControl
                                  contentPackId="10"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c8"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                Fast but insecure backup
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
            </div>
          </ListGroup>
        </ListGroup>
      </div>
    </ControlledTableList>
    <Row
      bsClass="row"
      className="row-sm"
      componentClass="div"
    >
      <div
        className="row-sm row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          />
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <Pagination
              boundaryPagesRange={1}
              currentPage={1}
              disabled={false}
              hideEllipsis={false}
              hideFirstAndLastPageLinks={false}
              hidePreviousAndNextPageLinks={false}
              onChange={[Function]}
              siblingPagesRange={1}
              totalPages={2}
            >
              <UltimatePaginationComponent
                boundaryPagesRange={1}
                currentPage={1}
                data-testid="graylog-pagination"
                disabled={false}
                hideEllipsis={false}
                hideFirstAndLastPageLinks={false}
                hidePreviousAndNextPageLinks={false}
                onChange={[Function]}
                siblingPagesRange={1}
                totalPages={2}
              >
                <Pagination__StyledBootstrapPagination
                  data-testid="graylog-pagination"
                >
                  <Pagination
                    bsClass="pagination"
                    className="c3"
                    data-testid="graylog-pagination"
                  >
                    <ul
                      className="c3 pagination"
                      data-testid="graylog-pagination"
                    >
                      <Component
                        isActive={true}
                        isDisabled={false}
                        key="-3"
                        onClick={[Function]}
                        type="FIRST_PAGE_LINK"
                        value={1}
                      >
                        <First
                          disabled={true}
                          onClick={[Function]}
                        >
                          <li
                            aria-label="First"
                            className="disabled"
                            onClick={[Function]}
                          >
                            <span>
                              <Icon
                                name="angle-double-left"
                                type="solid"
                              >
                                <FontAwesomeIcon
                                  icon={
                                    Object {
                                      "iconName": "angle-double-left",
                                      "prefix": "fas",
                                    }
                                  }
                                >
                                  <svg
                                    className="svg-inline--fa fa-angle-double-left"
                                  />
                                </FontAwesomeIcon>
                              </Icon>
                            </span>
                          </li>
                        </First>
                      </Component>
                      <Component
                        isActive={true}
                        isDisabled={false}
                        key="-4"
                        onClick={[Function]}
                        type="PREVIOUS_PAGE_LINK"
                        value={1}
                      >
                        <Prev
                          disabled={true}
                          onClick={[Function]}
                        >
                          <li
                            aria-label="Prev"
                            className="disabled"
                            onClick={[Function]}
                          >
                            <span>
                              <Icon
                                name="angle-left"
                                type="solid"
                              >
                                <FontAwesomeIcon
                                  icon={
                                    Object {
                                      "iconName": "angle-left",
                                      "prefix": "fas",
                                    }
                                  }
                                >
                                  <svg
                                    className="svg-inline--fa fa-angle-left"
                                  />
                                </FontAwesomeIcon>
                              </Icon>
                            </span>
                          </li>
                        </Prev>
                      </Component>
                      <Component
                        isActive={true}
                        isDisabled={false}
                        key="1"
                        onClick={[Function]}
                        type="PAGE"
                        value={1}
                      >
                        <PaginationItem
                          active={true}
                          activeLabel="(current)"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <li
                            className="active"
                          >
                            <span
                              disabled={false}
                              onClick={[Function]}
                            >
                              1
                              <span
                                className="sr-only"
                              >
                                (current)
                              </span>
                            </span>
                          </li>
                        </PaginationItem>
                      </Component>
                      <Component
                        isActive={false}
                        isDisabled={false}
                        key="2"
                        onClick={[Function]}
                        type="PAGE"
                        value={2}
                      >
                        <PaginationItem
                          active={false}
                          activeLabel="(current)"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <li
                            className=""
                          >
                            <SafeAnchor
                              componentClass="a"
                              disabled={false}
                              onClick={[Function]}
                            >
                              <a
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                              >
                                2
                              </a>
                            </SafeAnchor>
                          </li>
                        </PaginationItem>
                      </Component>
                      <Component
                        isActive={false}
                        isDisabled={false}
                        key="-5"
                        onClick={[Function]}
                        type="NEXT_PAGE_LINK"
                        value={2}
                      >
                        <Next
                          disabled={false}
                          onClick={[Function]}
                        >
                          <li
                            aria-label="Next"
                            className=""
                            onClick={[Function]}
                          >
                            <SafeAnchor
                              componentClass="a"
                            >
                              <a
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                              >
                                <Icon
                                  name="angle-right"
                                  type="solid"
                                >
                                  <FontAwesomeIcon
                                    icon={
                                      Object {
                                        "iconName": "angle-right",
                                        "prefix": "fas",
                                      }
                                    }
                                  >
                                    <svg
                                      className="svg-inline--fa fa-angle-right"
                                    />
                                  </FontAwesomeIcon>
                                </Icon>
                              </a>
                            </SafeAnchor>
                          </li>
                        </Next>
                      </Component>
                      <Component
                        isActive={false}
                        isDisabled={false}
                        key="-6"
                        onClick={[Function]}
                        type="LAST_PAGE_LINK"
                        value={2}
                      >
                        <Last
                          disabled={false}
                          onClick={[Function]}
                        >
                          <li
                            aria-label="Last"
                            className=""
                            onClick={[Function]}
                          >
                            <SafeAnchor
                              componentClass="a"
                            >
                              <a
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                              >
                                <Icon
                                  name="angle-double-right"
                                  type="solid"
                                >
                                  <FontAwesomeIcon
                                    icon={
                                      Object {
                                        "iconName": "angle-double-right",
                                        "prefix": "fas",
                                      }
                                    }
                                  >
                                    <svg
                                      className="svg-inline--fa fa-angle-double-right"
                                    />
                                  </FontAwesomeIcon>
                                </Icon>
                              </a>
                            </SafeAnchor>
                          </li>
                        </Last>
                      </Component>
                    </ul>
                  </Pagination>
                </Pagination__StyledBootstrapPagination>
              </UltimatePaginationComponent>
            </Pagination>
          </div>
        </Col>
        <Col
          bsClass="col"
          className="text-right"
          componentClass="div"
          md={2}
        >
          <div
            className="text-right col-md-2"
          >
            <span>
              Show: 
              <select
                onChange={[Function]}
                value={10}
              >
                <option>
                  10
                </option>
                <option>
                  25
                </option>
                <option>
                  50
                </option>
                <option>
                  100
                </option>
              </select>
            </span>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</ContentPacksList>
`;

exports[`<ContentPacksList /> should render with empty content packs 1`] = `
.c2.btn-danger {
  background-color: #ad0707;
  border-color: #b23939;
  color: rgb(252,249,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-danger:hover {
  background-color: #a00e0e;
  border-color: #a53636;
  color: #e9e6e6;
}

.c2.btn-danger.active {
  background-color: #b75151;
  border-color: #bc6363;
  color: rgb(252,249,249);
}

.c2.btn-danger.active:hover {
  background-color: #a94c4c;
  border-color: #ad5c5c;
  color: #e9e6e6;
}

.c2.btn-danger[disabled],
.c2.btn-danger.disabled {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c2.btn-danger[disabled]:hover,
.c2.btn-danger.disabled:hover {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c2.btn-default {
  background-color: #e6e6e6;
  border-color: #e0e0e0;
  color: rgb(73,73,73);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-default:hover {
  background-color: #d4d4d4;
  border-color: #cfcfcf;
  color: #444444;
}

.c2.btn-default.active {
  background-color: #dadada;
  border-color: #d4d4d4;
  color: rgb(49,49,49);
}

.c2.btn-default.active:hover {
  background-color: #cacaca;
  border-color: #c4c4c4;
  color: #2f2f2f;
}

.c2.btn-default[disabled],
.c2.btn-default.disabled {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c2.btn-default[disabled]:hover,
.c2.btn-default.disabled:hover {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c2.btn-info {
  background-color: #0063be;
  border-color: #3970c2;
  color: rgb(249,250,252);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-info:hover {
  background-color: #0c5cb0;
  border-color: #3668b3;
  color: #e6e7e9;
}

.c2.btn-info.active {
  background-color: #517cc5;
  border-color: #6386c9;
  color: rgb(249,250,252);
}

.c2.btn-info.active:hover {
  background-color: #4b73b6;
  border-color: #5c7dba;
  color: #e6e7e9;
}

.c2.btn-info[disabled],
.c2.btn-info.disabled {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c2.btn-info[disabled]:hover,
.c2.btn-info.disabled:hover {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c2.btn-link {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-link:hover {
  background-color: #ebebeb26;
  border-color: #ebebeb26;
  color: #68267b;
}

.c2.btn-link.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #410057;
}

.c2.btn-link.active:hover {
  background-color: rgba(255,255,255,0);
  border-color: #ebebeb26;
  color: #3d0c51;
}

.c2.btn-link[disabled],
.c2.btn-link.disabled {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c2.btn-link[disabled]:hover,
.c2.btn-link.disabled:hover {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c2.btn-primary {
  background-color: #702785;
  border-color: #7b458e;
  color: rgb(234,229,236);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-primary:hover {
  background-color: #68267b;
  border-color: #724083;
  color: #d8d3da;
}

.c2.btn-primary.active {
  background-color: #855996;
  border-color: #8f699d;
  color: rgb(250,249,251);
}

.c2.btn-primary.active:hover {
  background-color: #7c538b;
  border-color: #846292;
  color: #e7e6e8;
}

.c2.btn-primary[disabled],
.c2.btn-primary.disabled {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c2.btn-primary[disabled]:hover,
.c2.btn-primary.disabled:hover {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c2.btn-success {
  background-color: #00ae42;
  border-color: #39b356;
  color: rgb(249,252,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-success:hover {
  background-color: #0ca13e;
  border-color: #36a550;
  color: #e6e9e6;
}

.c2.btn-success.active {
  background-color: #51b866;
  border-color: #63bc74;
  color: rgb(249,252,250);
}

.c2.btn-success.active:hover {
  background-color: #4baa5f;
  border-color: #5cae6c;
  color: #e6e9e7;
}

.c2.btn-success[disabled],
.c2.btn-success.disabled {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c2.btn-success[disabled]:hover,
.c2.btn-success.disabled:hover {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c2.btn-warning {
  background-color: #ffd200;
  border-color: #f9cd07;
  color: rgb(57,47,0);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-warning:hover {
  background-color: #ebc20c;
  border-color: #e6bd0e;
  color: #362d0c;
}

.c2.btn-warning.active {
  background-color: #f2c70a;
  border-color: #ebc20c;
  color: rgb(54,45,2);
}

.c2.btn-warning.active:hover {
  background-color: #e0b80f;
  border-color: #d9b310;
  color: #332b0c;
}

.c2.btn-warning[disabled],
.c2.btn-warning.disabled {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c2.btn-warning[disabled]:hover,
.c2.btn-warning.disabled:hover {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c0 {
  color: #1f1f1f;
  font-weight: bold;
  margin-bottom: 5px;
  display: inline-block;
}

.c1 {
  color: #1f1f1f;
  background-color: #fff;
  border-color: #cdcdcd;
}

.c1::-webkit-input-placeholder {
  color: #9b9b9b;
}

.c1::-moz-placeholder {
  color: #9b9b9b;
}

.c1:-ms-input-placeholder {
  color: #9b9b9b;
}

.c1::placeholder {
  color: #9b9b9b;
}

.c1:focus {
  border-color: #7894ce;
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(120,148,206,0.4);
}

.c1[disabled],
.c1[readonly],
fieldset[disabled] .c1 {
  background-color: #cdcdcd;
}

.c1 ~ .form-control-feedback.glyphicon {
  display: none;
}

<ContentPacksList
  contentPackMetadata={Object {}}
  contentPacks={Array []}
  onDeletePack={[Function]}
  onInstall={[Function]}
>
  <div>
    <Row
      bsClass="row"
      className="row-sm"
      componentClass="div"
    >
      <div
        className="row-sm row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <TypeAheadDataFilter
              data={Array []}
              displayKey="name"
              filterBy=""
              filterSuggestionAccessor=""
              filterSuggestions={Array []}
              id="content-packs-filter"
              label="Filter"
              onDataFiltered={[Function]}
              searchInKeys={
                Array [
                  "name",
                  "summary",
                ]
              }
            >
              <div
                className="filter"
              >
                <form
                  className="form-inline"
                  onSubmit={[Function]}
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <TypeAheadInput
                    displayKey="name"
                    id="content-packs-filter"
                    label="Filter"
                    onSuggestionSelected={[Function]}
                    suggestionText="Filter by : "
                    suggestions={Array []}
                  >
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help=""
                      id="content-packs-filter"
                      label="Filter"
                      placeholder=""
                      type="text"
                      wrapperClassName="typeahead-wrapper"
                    >
                      <Component
                        controlId="content-packs-filter"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="content-packs-filter"
                          validationState={null}
                        >
                          <FormGroup
                            bsClass="form-group"
                            className=""
                            controlId="content-packs-filter"
                            validationState={null}
                          >
                            <div
                              className="form-group"
                            >
                              <ControlLabel>
                                <ControlLabel
                                  bsClass="control-label"
                                  className="c0"
                                  srOnly={false}
                                >
                                  <label
                                    className="c0 control-label"
                                    htmlFor="content-packs-filter"
                                  >
                                    Filter
                                  </label>
                                </ControlLabel>
                              </ControlLabel>
                              <InputWrapper
                                className="typeahead-wrapper"
                              >
                                <div
                                  className="typeahead-wrapper"
                                >
                                  <FormControl
                                    componentClass="input"
                                    inputRef={[Function]}
                                    label="Filter"
                                    name="content-packs-filter"
                                    placeholder=""
                                    type="text"
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      className="c1"
                                      componentClass="input"
                                      inputRef={[Function]}
                                      label="Filter"
                                      name="content-packs-filter"
                                      placeholder=""
                                      type="text"
                                    >
                                      <input
                                        className="c1 form-control"
                                        id="content-packs-filter"
                                        label="Filter"
                                        name="content-packs-filter"
                                        placeholder=""
                                        type="text"
                                      />
                                    </FormControl>
                                  </FormControl>
                                </div>
                              </InputWrapper>
                            </div>
                          </FormGroup>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                  </TypeAheadInput>
                  <ForwardRef
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                    type="submit"
                  >
                    <Button__StyledButton
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="submit"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="c2"
                        disabled={false}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="submit"
                      >
                        <button
                          className="c2 btn btn-default"
                          disabled={false}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="submit"
                        >
                          Filter
                        </button>
                      </Button>
                    </Button__StyledButton>
                  </ForwardRef>
                  <ForwardRef
                    disabled={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                    type="button"
                  >
                    <Button__StyledButton
                      disabled={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="button"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="c2"
                        disabled={true}
                        onClick={[Function]}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="button"
                      >
                        <button
                          className="c2 btn btn-default"
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="button"
                        >
                          Reset
                        </button>
                      </Button>
                    </Button__StyledButton>
                  </ForwardRef>
                </form>
                <ul
                  className="pill-list"
                >
                  <Component />
                </ul>
              </div>
            </TypeAheadDataFilter>
          </div>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <Pagination
              boundaryPagesRange={1}
              currentPage={1}
              disabled={false}
              hideEllipsis={false}
              hideFirstAndLastPageLinks={false}
              hidePreviousAndNextPageLinks={false}
              onChange={[Function]}
              siblingPagesRange={1}
              totalPages={0}
            />
          </div>
        </Col>
        <Col
          bsClass="col"
          className="text-right"
          componentClass="div"
          md={2}
        >
          <div
            className="text-right col-md-2"
          >
            <span>
              Show: 
              <select
                onChange={[Function]}
                value={10}
              >
                <option>
                  10
                </option>
                <option>
                  25
                </option>
                <option>
                  50
                </option>
                <option>
                  100
                </option>
              </select>
            </span>
          </div>
        </Col>
      </div>
    </Row>
    <div>
      No content packs found. Please create or upload one
    </div>
    <Row
      bsClass="row"
      className="row-sm"
      componentClass="div"
    >
      <div
        className="row-sm row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          />
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <Pagination
              boundaryPagesRange={1}
              currentPage={1}
              disabled={false}
              hideEllipsis={false}
              hideFirstAndLastPageLinks={false}
              hidePreviousAndNextPageLinks={false}
              onChange={[Function]}
              siblingPagesRange={1}
              totalPages={0}
            />
          </div>
        </Col>
        <Col
          bsClass="col"
          className="text-right"
          componentClass="div"
          md={2}
        >
          <div
            className="text-right col-md-2"
          >
            <span>
              Show: 
              <select
                onChange={[Function]}
                value={10}
              >
                <option>
                  10
                </option>
                <option>
                  25
                </option>
                <option>
                  50
                </option>
                <option>
                  100
                </option>
              </select>
            </span>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</ContentPacksList>
`;
